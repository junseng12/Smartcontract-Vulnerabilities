{"id":"c8727e4b0ff347e4294e93a6624a2f3a","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"contracts/minimal-proxy/MinimalProxyFactory.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\n\r\ncontract MinimalProxyFactory {\r\n    using Clones for address;\r\n    event ProxyDeployed(address proxy);\r\n\r\n    // createClone 함수는 EIP-1167 방식으로 최소 Proxy를 생성\r\n    function createClone(address implementation) external returns (address clone) {\r\n        //로직 컨트랙트 주소를 20바이트로 슬라이스 (EVM 주소는 20바이트)\r\n        clone = implementation.clone(); // EIP-1167 방식 안전하게 사용\r\n        emit ProxyDeployed(clone);\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[398],"Create2":[497],"Errors":[519]},"id":399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"../utils/Create2.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":399,"sourceUnit":498,"src":"126:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"134:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"../utils/Errors.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":399,"sourceUnit":520,"src":"172:43:0","symbolAliases":[{"foreign":{"id":4,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"180:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"217:599:0","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."},"fullyImplemented":true,"id":398,"linearizedBaseContracts":[398],"name":"Clones","nameLocation":"825:6:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"94289054","id":8,"name":"CloneArgumentsTooLong","nameLocation":"844:21:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"865:2:0"},"src":"838:30:0"},{"body":{"id":21,"nodeType":"Block","src":"1146:48:0","statements":[{"expression":{"arguments":[{"id":17,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1169:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1185:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":16,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[22,67],"referencedDeclaration":67,"src":"1163:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":15,"id":20,"nodeType":"Return","src":"1156:31:0"}]},"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"874:192:0","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":22,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"1080:5:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"implementation","nameLocation":"1094:14:0","nodeType":"VariableDeclaration","scope":22,"src":"1086:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1085:24:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"instance","nameLocation":"1136:8:0","nodeType":"VariableDeclaration","scope":22,"src":"1128:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1127:18:0"},"scope":398,"src":"1071:123:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1676:820:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":34,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1698:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}],"id":33,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1690:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:0","typeDescriptions":{}}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1690:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1704:7:0","memberName":"balance","nodeType":"MemberAccess","src":"1690:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":37,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1714:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1690:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":51,"nodeType":"IfStatement","src":"1686:123:0","trueBody":{"id":50,"nodeType":"Block","src":"1721:88:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":44,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1777:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}],"id":43,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1769:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:0","typeDescriptions":{}}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1783:7:0","memberName":"balance","nodeType":"MemberAccess","src":"1769:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":47,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1792:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":39,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1742:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$519_$","typeString":"type(library Errors)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1749:19:0","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":507,"src":"1742:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1742:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49,"nodeType":"RevertStatement","src":"1735:63:0"}]}},{"AST":{"nodeType":"YulBlock","src":"1843:553:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2048:4:0","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:4:0","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2071:4:0","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2077:14:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2067:3:0"},"nodeType":"YulFunctionCall","src":"2067:25:0"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2057:3:0"},"nodeType":"YulFunctionCall","src":"2057:36:0"},{"kind":"number","nodeType":"YulLiteral","src":"2095:48:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2054:2:0"},"nodeType":"YulFunctionCall","src":"2054:90:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2041:6:0"},"nodeType":"YulFunctionCall","src":"2041:104:0"},"nodeType":"YulExpressionStatement","src":"2041:104:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2266:4:0","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2279:4:0","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"2285:14:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2275:3:0"},"nodeType":"YulFunctionCall","src":"2275:25:0"},{"kind":"number","nodeType":"YulLiteral","src":"2302:32:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2272:2:0"},"nodeType":"YulFunctionCall","src":"2272:63:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2259:6:0"},"nodeType":"YulFunctionCall","src":"2259:77:0"},"nodeType":"YulExpressionStatement","src":"2259:77:0"},{"nodeType":"YulAssignment","src":"2349:37:0","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"2375:4:0","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"2381:4:0","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"2361:6:0"},"nodeType":"YulFunctionCall","src":"2361:25:0"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2349:8:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":25,"isOffset":false,"isSlot":false,"src":"2077:14:0","valueSize":1},{"declaration":25,"isOffset":false,"isSlot":false,"src":"2285:14:0","valueSize":1},{"declaration":30,"isOffset":false,"isSlot":false,"src":"2349:8:0","valueSize":1},{"declaration":27,"isOffset":false,"isSlot":false,"src":"2368:5:0","valueSize":1}],"flags":["memory-safe"],"id":52,"nodeType":"InlineAssembly","src":"1818:578:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":53,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2409:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":55,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{}}},"id":57,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":65,"nodeType":"IfStatement","src":"2405:85:0","trueBody":{"id":64,"nodeType":"Block","src":"2433:57:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":59,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2454:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$519_$","typeString":"type(library Errors)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2461:16:0","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":513,"src":"2454:23:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2454:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63,"nodeType":"RevertStatement","src":"2447:32:0"}]}}]},"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1200:381:0","text":" @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":67,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"1595:5:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"implementation","nameLocation":"1609:14:0","nodeType":"VariableDeclaration","scope":67,"src":"1601:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1601:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"value","nameLocation":"1633:5:0","nodeType":"VariableDeclaration","scope":67,"src":"1625:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"1625:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1600:39:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"instance","nameLocation":"1666:8:0","nodeType":"VariableDeclaration","scope":67,"src":"1658:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1657:18:0"},"scope":398,"src":"1586:910:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":83,"nodeType":"Block","src":"2974:67:0","statements":[{"expression":{"arguments":[{"id":78,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"3010:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":79,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":77,"name":"cloneDeterministic","nodeType":"Identifier","overloadedDeclarations":[84,131],"referencedDeclaration":131,"src":"2991:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes32,uint256) returns (address)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2991:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":76,"id":82,"nodeType":"Return","src":"2984:50:0"}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2502:365:0","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"2881:18:0","nodeType":"FunctionDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"implementation","nameLocation":"2908:14:0","nodeType":"VariableDeclaration","scope":84,"src":"2900:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2900:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"salt","nameLocation":"2932:4:0","nodeType":"VariableDeclaration","scope":84,"src":"2924:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":71,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2924:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2899:38:0"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"instance","nameLocation":"2964:8:0","nodeType":"VariableDeclaration","scope":84,"src":"2956:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"2956:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2955:18:0"},"scope":398,"src":"2872:169:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3614:827:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":98,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3636:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}],"id":97,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3628:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:0","typeDescriptions":{}}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3628:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3642:7:0","memberName":"balance","nodeType":"MemberAccess","src":"3628:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"3652:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3628:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":115,"nodeType":"IfStatement","src":"3624:123:0","trueBody":{"id":114,"nodeType":"Block","src":"3659:88:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":108,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3715:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3707:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"3707:7:0","typeDescriptions":{}}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3707:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3721:7:0","memberName":"balance","nodeType":"MemberAccess","src":"3707:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"3730:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":103,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3680:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$519_$","typeString":"type(library Errors)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3687:19:0","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":507,"src":"3680:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3680:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":113,"nodeType":"RevertStatement","src":"3673:63:0"}]}},{"AST":{"nodeType":"YulBlock","src":"3781:560:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3986:4:0","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3999:4:0","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4009:4:0","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"4015:14:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4005:3:0"},"nodeType":"YulFunctionCall","src":"4005:25:0"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3995:3:0"},"nodeType":"YulFunctionCall","src":"3995:36:0"},{"kind":"number","nodeType":"YulLiteral","src":"4033:48:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3992:2:0"},"nodeType":"YulFunctionCall","src":"3992:90:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3979:6:0"},"nodeType":"YulFunctionCall","src":"3979:104:0"},"nodeType":"YulExpressionStatement","src":"3979:104:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4204:4:0","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4217:4:0","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"4223:14:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4213:3:0"},"nodeType":"YulFunctionCall","src":"4213:25:0"},{"kind":"number","nodeType":"YulLiteral","src":"4240:32:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4210:2:0"},"nodeType":"YulFunctionCall","src":"4210:63:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4197:6:0"},"nodeType":"YulFunctionCall","src":"4197:77:0"},"nodeType":"YulExpressionStatement","src":"4197:77:0"},{"nodeType":"YulAssignment","src":"4287:44:0","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4307:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"4314:4:0","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"4320:4:0","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"4326:4:0"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"4299:7:0"},"nodeType":"YulFunctionCall","src":"4299:32:0"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"4287:8:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":87,"isOffset":false,"isSlot":false,"src":"4015:14:0","valueSize":1},{"declaration":87,"isOffset":false,"isSlot":false,"src":"4223:14:0","valueSize":1},{"declaration":94,"isOffset":false,"isSlot":false,"src":"4287:8:0","valueSize":1},{"declaration":89,"isOffset":false,"isSlot":false,"src":"4326:4:0","valueSize":1},{"declaration":91,"isOffset":false,"isSlot":false,"src":"4307:5:0","valueSize":1}],"flags":["memory-safe"],"id":116,"nodeType":"InlineAssembly","src":"3756:585:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":117,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4354:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4354:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"4350:85:0","trueBody":{"id":128,"nodeType":"Block","src":"4378:57:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":123,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4399:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$519_$","typeString":"type(library Errors)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4406:16:0","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":513,"src":"4399:23:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"RevertStatement","src":"4392:32:0"}]}}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"3047:415:0","text":" @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"3476:18:0","nodeType":"FunctionDefinition","parameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"implementation","nameLocation":"3512:14:0","nodeType":"VariableDeclaration","scope":131,"src":"3504:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"salt","nameLocation":"3544:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3536:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":88,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3536:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"value","nameLocation":"3566:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3558:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"3558:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:83:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"instance","nameLocation":"3604:8:0","nodeType":"VariableDeclaration","scope":131,"src":"3596:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"3596:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3595:18:0"},"scope":398,"src":"3467:974:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":144,"nodeType":"Block","src":"4716:537:0","statements":[{"AST":{"nodeType":"YulBlock","src":"4751:496:0","statements":[{"nodeType":"YulVariableDeclaration","src":"4765:22:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4782:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4776:5:0"},"nodeType":"YulFunctionCall","src":"4776:11:0"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4769:3:0","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4811:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"4816:4:0","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4807:3:0"},"nodeType":"YulFunctionCall","src":"4807:14:0"},{"name":"deployer","nodeType":"YulIdentifier","src":"4823:8:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4800:6:0"},"nodeType":"YulFunctionCall","src":"4800:32:0"},"nodeType":"YulExpressionStatement","src":"4800:32:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4856:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"4861:4:0","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4852:3:0"},"nodeType":"YulFunctionCall","src":"4852:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"4868:34:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4845:6:0"},"nodeType":"YulFunctionCall","src":"4845:58:0"},"nodeType":"YulExpressionStatement","src":"4845:58:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4927:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"4932:4:0","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4923:3:0"},"nodeType":"YulFunctionCall","src":"4923:14:0"},{"name":"implementation","nodeType":"YulIdentifier","src":"4939:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4916:6:0"},"nodeType":"YulFunctionCall","src":"4916:38:0"},"nodeType":"YulExpressionStatement","src":"4916:38:0"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4974:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"4979:42:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4967:6:0"},"nodeType":"YulFunctionCall","src":"4967:55:0"},"nodeType":"YulExpressionStatement","src":"4967:55:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5046:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"5051:4:0","type":"","value":"0x58"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5042:3:0"},"nodeType":"YulFunctionCall","src":"5042:14:0"},{"name":"salt","nodeType":"YulIdentifier","src":"5058:4:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5035:6:0"},"nodeType":"YulFunctionCall","src":"5035:28:0"},"nodeType":"YulExpressionStatement","src":"5035:28:0"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5087:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"5092:4:0","type":"","value":"0x78"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5083:3:0"},"nodeType":"YulFunctionCall","src":"5083:14:0"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5113:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"5118:4:0","type":"","value":"0x0c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5109:3:0"},"nodeType":"YulFunctionCall","src":"5109:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"5125:4:0","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5099:9:0"},"nodeType":"YulFunctionCall","src":"5099:31:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5076:6:0"},"nodeType":"YulFunctionCall","src":"5076:55:0"},"nodeType":"YulExpressionStatement","src":"5076:55:0"},{"nodeType":"YulAssignment","src":"5144:93:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5175:3:0"},{"kind":"number","nodeType":"YulLiteral","src":"5180:4:0","type":"","value":"0x43"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:0"},"nodeType":"YulFunctionCall","src":"5171:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"5187:4:0","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5161:9:0"},"nodeType":"YulFunctionCall","src":"5161:31:0"},{"kind":"number","nodeType":"YulLiteral","src":"5194:42:0","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5157:3:0"},"nodeType":"YulFunctionCall","src":"5157:80:0"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"5144:9:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":138,"isOffset":false,"isSlot":false,"src":"4823:8:0","valueSize":1},{"declaration":134,"isOffset":false,"isSlot":false,"src":"4939:14:0","valueSize":1},{"declaration":141,"isOffset":false,"isSlot":false,"src":"5144:9:0","valueSize":1},{"declaration":136,"isOffset":false,"isSlot":false,"src":"5058:4:0","valueSize":1}],"flags":["memory-safe"],"id":143,"nodeType":"InlineAssembly","src":"4726:521:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4447:99:0","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":145,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"4560:27:0","nodeType":"FunctionDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"implementation","nameLocation":"4605:14:0","nodeType":"VariableDeclaration","scope":145,"src":"4597:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4597:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"salt","nameLocation":"4637:4:0","nodeType":"VariableDeclaration","scope":145,"src":"4629:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4629:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":138,"mutability":"mutable","name":"deployer","nameLocation":"4659:8:0","nodeType":"VariableDeclaration","scope":145,"src":"4651:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"4651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4587:86:0"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"predicted","nameLocation":"4705:9:0","nodeType":"VariableDeclaration","scope":145,"src":"4697:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"4697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4696:19:0"},"scope":398,"src":"4551:702:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":164,"nodeType":"Block","src":"5502:88:0","statements":[{"expression":{"arguments":[{"id":156,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"5547:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":157,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"5563:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":160,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5577:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}],"id":159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5569:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"5569:7:0","typeDescriptions":{}}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5569:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":155,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[145,165],"referencedDeclaration":145,"src":"5519:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":163,"nodeType":"Return","src":"5512:71:0"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"5259:99:0","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"5372:27:0","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"implementation","nameLocation":"5417:14:0","nodeType":"VariableDeclaration","scope":165,"src":"5409:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"5409:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"salt","nameLocation":"5449:4:0","nodeType":"VariableDeclaration","scope":165,"src":"5441:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5441:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5399:60:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"predicted","nameLocation":"5491:9:0","nodeType":"VariableDeclaration","scope":165,"src":"5483:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"5483:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5482:19:0"},"scope":398,"src":"5363:227:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"6096:71:0","statements":[{"expression":{"arguments":[{"id":176,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"6136:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":177,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"6152:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6158:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":175,"name":"cloneWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[182,236],"referencedDeclaration":236,"src":"6113:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,uint256) returns (address)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6113:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":174,"id":180,"nodeType":"Return","src":"6106:54:0"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"5596:384:0","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert."},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"5994:22:0","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"implementation","nameLocation":"6025:14:0","nodeType":"VariableDeclaration","scope":182,"src":"6017:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"6017:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"args","nameLocation":"6054:4:0","nodeType":"VariableDeclaration","scope":182,"src":"6041:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":169,"name":"bytes","nodeType":"ElementaryTypeName","src":"6041:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6016:43:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"instance","nameLocation":"6086:8:0","nodeType":"VariableDeclaration","scope":182,"src":"6078:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"6078:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6077:18:0"},"scope":398,"src":"5985:182:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":235,"nodeType":"Block","src":"6755:437:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":196,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6777:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}],"id":195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6769:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"6769:7:0","typeDescriptions":{}}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6769:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6783:7:0","memberName":"balance","nodeType":"MemberAccess","src":"6769:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6793:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6769:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":213,"nodeType":"IfStatement","src":"6765:123:0","trueBody":{"id":212,"nodeType":"Block","src":"6800:88:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":206,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6856:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}],"id":205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6848:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"6848:7:0","typeDescriptions":{}}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6848:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6862:7:0","memberName":"balance","nodeType":"MemberAccess","src":"6848:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6871:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":201,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6821:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$519_$","typeString":"type(library Errors)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6828:19:0","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":507,"src":"6821:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6821:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"RevertStatement","src":"6814:63:0"}]}},{"assignments":[215],"declarations":[{"constant":false,"id":215,"mutability":"mutable","name":"bytecode","nameLocation":"6910:8:0","nodeType":"VariableDeclaration","scope":235,"src":"6897:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":214,"name":"bytes","nodeType":"ElementaryTypeName","src":"6897:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":220,"initialValue":{"arguments":[{"id":217,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"6949:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":218,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"6965:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":216,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6921:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6921:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6897:73:0"},{"AST":{"nodeType":"YulBlock","src":"7005:87:0","statements":[{"nodeType":"YulAssignment","src":"7019:63:0","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7038:5:0"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"7049:8:0"},{"kind":"number","nodeType":"YulLiteral","src":"7059:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7045:3:0"},"nodeType":"YulFunctionCall","src":"7045:19:0"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"7072:8:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7066:5:0"},"nodeType":"YulFunctionCall","src":"7066:15:0"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"7031:6:0"},"nodeType":"YulFunctionCall","src":"7031:51:0"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"7019:8:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":215,"isOffset":false,"isSlot":false,"src":"7049:8:0","valueSize":1},{"declaration":215,"isOffset":false,"isSlot":false,"src":"7072:8:0","valueSize":1},{"declaration":192,"isOffset":false,"isSlot":false,"src":"7019:8:0","valueSize":1},{"declaration":189,"isOffset":false,"isSlot":false,"src":"7038:5:0","valueSize":1}],"flags":["memory-safe"],"id":221,"nodeType":"InlineAssembly","src":"6980:112:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":222,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"7105:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7125:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7117:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"7117:7:0","typeDescriptions":{}}},"id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7117:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7105:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":234,"nodeType":"IfStatement","src":"7101:85:0","trueBody":{"id":233,"nodeType":"Block","src":"7129:57:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":228,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7150:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$519_$","typeString":"type(library Errors)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7157:16:0","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":513,"src":"7150:23:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7150:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"RevertStatement","src":"7143:32:0"}]}}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"6173:421:0","text":" @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":236,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"6608:22:0","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"implementation","nameLocation":"6648:14:0","nodeType":"VariableDeclaration","scope":236,"src":"6640:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"args","nameLocation":"6685:4:0","nodeType":"VariableDeclaration","scope":236,"src":"6672:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":186,"name":"bytes","nodeType":"ElementaryTypeName","src":"6672:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"value","nameLocation":"6707:5:0","nodeType":"VariableDeclaration","scope":236,"src":"6699:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"6699:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6630:88:0"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"instance","nameLocation":"6745:8:0","nodeType":"VariableDeclaration","scope":236,"src":"6737:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"6737:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6736:18:0"},"scope":398,"src":"6599:593:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"7937:90:0","statements":[{"expression":{"arguments":[{"id":249,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7990:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":250,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"8006:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":251,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"8012:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8018:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":248,"name":"cloneDeterministicWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[256,285],"referencedDeclaration":285,"src":"7954:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,uint256) returns (address)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7954:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":247,"id":254,"nodeType":"Return","src":"7947:73:0"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"7198:566:0","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"7778:35:0","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"implementation","nameLocation":"7831:14:0","nodeType":"VariableDeclaration","scope":256,"src":"7823:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"7823:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"args","nameLocation":"7868:4:0","nodeType":"VariableDeclaration","scope":256,"src":"7855:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":240,"name":"bytes","nodeType":"ElementaryTypeName","src":"7855:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"salt","nameLocation":"7890:4:0","nodeType":"VariableDeclaration","scope":256,"src":"7882:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7882:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7813:87:0"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"instance","nameLocation":"7927:8:0","nodeType":"VariableDeclaration","scope":256,"src":"7919:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"7919:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7918:18:0"},"scope":398,"src":"7769:258:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"8684:144:0","statements":[{"assignments":[271],"declarations":[{"constant":false,"id":271,"mutability":"mutable","name":"bytecode","nameLocation":"8707:8:0","nodeType":"VariableDeclaration","scope":284,"src":"8694:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":270,"name":"bytes","nodeType":"ElementaryTypeName","src":"8694:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":276,"initialValue":{"arguments":[{"id":273,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8746:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":274,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"8762:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":272,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"8718:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8694:73:0"},{"expression":{"arguments":[{"id":279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"8799:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":280,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"8806:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8812:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":277,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"8784:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$497_$","typeString":"type(library Create2)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8792:6:0","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":462,"src":"8784:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8784:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":269,"id":283,"nodeType":"Return","src":"8777:44:0"}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"8033:455:0","text":" @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":285,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"8502:35:0","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"implementation","nameLocation":"8555:14:0","nodeType":"VariableDeclaration","scope":285,"src":"8547:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"8547:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"args","nameLocation":"8592:4:0","nodeType":"VariableDeclaration","scope":285,"src":"8579:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":260,"name":"bytes","nodeType":"ElementaryTypeName","src":"8579:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"salt","nameLocation":"8614:4:0","nodeType":"VariableDeclaration","scope":285,"src":"8606:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8606:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"value","nameLocation":"8636:5:0","nodeType":"VariableDeclaration","scope":285,"src":"8628:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"8628:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8537:110:0"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"instance","nameLocation":"8674:8:0","nodeType":"VariableDeclaration","scope":285,"src":"8666:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"8666:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8665:18:0"},"scope":398,"src":"8493:335:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":315,"nodeType":"Block","src":"9164:166:0","statements":[{"assignments":[300],"declarations":[{"constant":false,"id":300,"mutability":"mutable","name":"bytecode","nameLocation":"9187:8:0","nodeType":"VariableDeclaration","scope":315,"src":"9174:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":299,"name":"bytes","nodeType":"ElementaryTypeName","src":"9174:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":305,"initialValue":{"arguments":[{"id":302,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"9226:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":303,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"9242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":301,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"9198:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9198:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9174:73:0"},{"expression":{"arguments":[{"id":308,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"9287:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":310,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"9303:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":309,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9293:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9293:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":312,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"9314:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":306,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"9264:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$497_$","typeString":"type(library Create2)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9272:14:0","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":496,"src":"9264:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":298,"id":314,"nodeType":"Return","src":"9257:66:0"}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"8834:116:0","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":316,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"8964:44:0","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"implementation","nameLocation":"9026:14:0","nodeType":"VariableDeclaration","scope":316,"src":"9018:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"9018:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"args","nameLocation":"9063:4:0","nodeType":"VariableDeclaration","scope":316,"src":"9050:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":289,"name":"bytes","nodeType":"ElementaryTypeName","src":"9050:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"salt","nameLocation":"9085:4:0","nodeType":"VariableDeclaration","scope":316,"src":"9077:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9077:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"deployer","nameLocation":"9107:8:0","nodeType":"VariableDeclaration","scope":316,"src":"9099:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"9099:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9008:113:0"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"predicted","nameLocation":"9153:9:0","nodeType":"VariableDeclaration","scope":316,"src":"9145:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"9145:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9144:19:0"},"scope":398,"src":"8955:375:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":338,"nodeType":"Block","src":"9640:111:0","statements":[{"expression":{"arguments":[{"id":329,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"9702:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":330,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"9718:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":331,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"9724:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":334,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9738:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$398","typeString":"library Clones"}],"id":333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9730:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"9730:7:0","typeDescriptions":{}}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":328,"name":"predictDeterministicAddressWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[316,339],"referencedDeclaration":316,"src":"9657:44:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,address) pure returns (address)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9657:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":327,"id":337,"nodeType":"Return","src":"9650:94:0"}]},"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"9336:116:0","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":339,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"9466:44:0","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"implementation","nameLocation":"9528:14:0","nodeType":"VariableDeclaration","scope":339,"src":"9520:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"9520:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"args","nameLocation":"9565:4:0","nodeType":"VariableDeclaration","scope":339,"src":"9552:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":320,"name":"bytes","nodeType":"ElementaryTypeName","src":"9552:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"salt","nameLocation":"9587:4:0","nodeType":"VariableDeclaration","scope":339,"src":"9579:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9579:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9510:87:0"},"returnParameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"predicted","nameLocation":"9629:9:0","nodeType":"VariableDeclaration","scope":339,"src":"9621:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"9621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9620:19:0"},"scope":398,"src":"9457:294:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":361,"nodeType":"Block","src":"10444:246:0","statements":[{"assignments":[348],"declarations":[{"constant":false,"id":348,"mutability":"mutable","name":"result","nameLocation":"10467:6:0","nodeType":"VariableDeclaration","scope":361,"src":"10454:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":347,"name":"bytes","nodeType":"ElementaryTypeName","src":"10454:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":357,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":351,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"10486:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10495:4:0","memberName":"code","nodeType":"MemberAccess","src":"10486:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10500:6:0","memberName":"length","nodeType":"MemberAccess","src":"10486:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3435","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:2:0","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"10486:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10476:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":349,"name":"bytes","nodeType":"ElementaryTypeName","src":"10480:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10476:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10454:58:0"},{"AST":{"nodeType":"YulBlock","src":"10580:81:0","statements":[{"expression":{"arguments":[{"name":"instance","nodeType":"YulIdentifier","src":"10606:8:0"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"10620:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"10628:2:0","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10616:3:0"},"nodeType":"YulFunctionCall","src":"10616:15:0"},{"kind":"number","nodeType":"YulLiteral","src":"10633:2:0","type":"","value":"45"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"10643:6:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10637:5:0"},"nodeType":"YulFunctionCall","src":"10637:13:0"}],"functionName":{"name":"extcodecopy","nodeType":"YulIdentifier","src":"10594:11:0"},"nodeType":"YulFunctionCall","src":"10594:57:0"},"nodeType":"YulExpressionStatement","src":"10594:57:0"}]},"evmVersion":"paris","externalReferences":[{"declaration":342,"isOffset":false,"isSlot":false,"src":"10606:8:0","valueSize":1},{"declaration":348,"isOffset":false,"isSlot":false,"src":"10620:6:0","valueSize":1},{"declaration":348,"isOffset":false,"isSlot":false,"src":"10643:6:0","valueSize":1}],"flags":["memory-safe"],"id":358,"nodeType":"InlineAssembly","src":"10555:106:0"},{"expression":{"id":359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"10677:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":346,"id":360,"nodeType":"Return","src":"10670:13:0"}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"9757:603:0","text":" @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."},"id":362,"implemented":true,"kind":"function","modifiers":[],"name":"fetchCloneArgs","nameLocation":"10374:14:0","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"instance","nameLocation":"10397:8:0","nodeType":"VariableDeclaration","scope":362,"src":"10389:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"10389:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10388:18:0"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":362,"src":"10430:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":344,"name":"bytes","nodeType":"ElementaryTypeName","src":"10430:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10429:14:0"},"scope":398,"src":"10365:325:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"11479:362:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":372,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"11493:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11498:6:0","memberName":"length","nodeType":"MemberAccess","src":"11493:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3234353331","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11507:5:0","typeDescriptions":{"typeIdentifier":"t_rational_24531_by_1","typeString":"int_const 24531"},"value":"24531"},"src":"11493:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":379,"nodeType":"IfStatement","src":"11489:55:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":376,"name":"CloneArgumentsTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"11521:21:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11521:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"RevertStatement","src":"11514:30:0"}},{"expression":{"arguments":[{"hexValue":"61","id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"11607:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},"value":"a"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":385,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"11639:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11644:6:0","memberName":"length","nodeType":"MemberAccess","src":"11639:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3435","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11653:2:0","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"11639:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11632:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":383,"name":"uint16","nodeType":"ElementaryTypeName","src":"11632:6:0","typeDescriptions":{}}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11632:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"3d81600a3d39f3363d3d373d3d3d363d73","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"11674:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""}},{"id":391,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"11731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"5af43d82803e903d91602b57fd5bf3","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"11763:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""}},{"id":393,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"11816:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":380,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11573:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11577:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"11573:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11573:261:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":371,"id":395,"nodeType":"Return","src":"11554:280:0"}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"10696:640:0","text":" @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."},"id":397,"implemented":true,"kind":"function","modifiers":[],"name":"_cloneCodeWithImmutableArgs","nameLocation":"11350:27:0","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"implementation","nameLocation":"11395:14:0","nodeType":"VariableDeclaration","scope":397,"src":"11387:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"11387:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"args","nameLocation":"11432:4:0","nodeType":"VariableDeclaration","scope":397,"src":"11419:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":366,"name":"bytes","nodeType":"ElementaryTypeName","src":"11419:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11377:65:0"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"11465:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":369,"name":"bytes","nodeType":"ElementaryTypeName","src":"11465:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11464:14:0"},"scope":398,"src":"11341:500:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":399,"src":"817:11026:0","usedErrors":[8],"usedEvents":[]}],"src":"100:11744:0"},"id":0},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[497],"Errors":[519]},"id":498,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":400,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":498,"sourceUnit":520,"src":"127:36:1","symbolAliases":[{"foreign":{"id":401,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"135:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"165:367:1","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":497,"linearizedBaseContracts":[497],"name":"Create2","nameLocation":"541:7:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"555:50:1","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":406,"name":"Create2EmptyBytecode","nameLocation":"616:20:1","nodeType":"ErrorDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"636:2:1"},"src":"610:29:1"},{"body":{"id":461,"nodeType":"Block","src":"1311:746:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":420,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1333:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$497","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$497","typeString":"library Create2"}],"id":419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1325:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:1","typeDescriptions":{}}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1325:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1339:7:1","memberName":"balance","nodeType":"MemberAccess","src":"1325:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":423,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1349:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1325:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"IfStatement","src":"1321:125:1","trueBody":{"id":436,"nodeType":"Block","src":"1357:89:1","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":430,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1413:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$497","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$497","typeString":"library Create2"}],"id":429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1405:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:1","typeDescriptions":{}}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1405:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1419:7:1","memberName":"balance","nodeType":"MemberAccess","src":"1405:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":433,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1428:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":425,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1378:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$519_$","typeString":"type(library Errors)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1385:19:1","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":507,"src":"1378:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1378:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"RevertStatement","src":"1371:64:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":438,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"1459:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1468:6:1","memberName":"length","nodeType":"MemberAccess","src":"1459:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1478:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1459:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":446,"nodeType":"IfStatement","src":"1455:80:1","trueBody":{"id":445,"nodeType":"Block","src":"1481:54:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":442,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1502:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"RevertStatement","src":"1495:29:1"}]}},{"AST":{"nodeType":"YulBlock","src":"1569:392:1","statements":[{"nodeType":"YulAssignment","src":"1583:67:1","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1599:6:1"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1611:8:1"},{"kind":"number","nodeType":"YulLiteral","src":"1621:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:1"},"nodeType":"YulFunctionCall","src":"1607:19:1"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1634:8:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1628:5:1"},"nodeType":"YulFunctionCall","src":"1628:15:1"},{"name":"salt","nodeType":"YulIdentifier","src":"1645:4:1"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1591:7:1"},"nodeType":"YulFunctionCall","src":"1591:59:1"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1583:4:1"}]},{"body":{"nodeType":"YulBlock","src":"1800:151:1","statements":[{"nodeType":"YulVariableDeclaration","src":"1818:20:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1833:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1827:5:1"},"nodeType":"YulFunctionCall","src":"1827:11:1"},"variables":[{"name":"p","nodeType":"YulTypedName","src":"1822:1:1","type":""}]},{"expression":{"arguments":[{"name":"p","nodeType":"YulIdentifier","src":"1870:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"1873:1:1","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1876:14:1"},"nodeType":"YulFunctionCall","src":"1876:16:1"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1855:14:1"},"nodeType":"YulFunctionCall","src":"1855:38:1"},"nodeType":"YulExpressionStatement","src":"1855:38:1"},{"expression":{"arguments":[{"name":"p","nodeType":"YulIdentifier","src":"1917:1:1"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1920:14:1"},"nodeType":"YulFunctionCall","src":"1920:16:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1910:6:1"},"nodeType":"YulFunctionCall","src":"1910:27:1"},"nodeType":"YulExpressionStatement","src":"1910:27:1"}]},"condition":{"arguments":[{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"1762:4:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1755:6:1"},"nodeType":"YulFunctionCall","src":"1755:12:1"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1780:14:1"},"nodeType":"YulFunctionCall","src":"1780:16:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1773:6:1"},"nodeType":"YulFunctionCall","src":"1773:24:1"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1769:3:1"},"nodeType":"YulFunctionCall","src":"1769:29:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1751:3:1"},"nodeType":"YulFunctionCall","src":"1751:48:1"},"nodeType":"YulIf","src":"1748:203:1"}]},"evmVersion":"paris","externalReferences":[{"declaration":416,"isOffset":false,"isSlot":false,"src":"1583:4:1","valueSize":1},{"declaration":416,"isOffset":false,"isSlot":false,"src":"1762:4:1","valueSize":1},{"declaration":409,"isOffset":false,"isSlot":false,"src":"1599:6:1","valueSize":1},{"declaration":413,"isOffset":false,"isSlot":false,"src":"1611:8:1","valueSize":1},{"declaration":413,"isOffset":false,"isSlot":false,"src":"1634:8:1","valueSize":1},{"declaration":411,"isOffset":false,"isSlot":false,"src":"1645:4:1","valueSize":1}],"flags":["memory-safe"],"id":447,"nodeType":"InlineAssembly","src":"1544:417:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":448,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1974:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1982:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:1","typeDescriptions":{}}},"id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1974:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":460,"nodeType":"IfStatement","src":"1970:81:1","trueBody":{"id":459,"nodeType":"Block","src":"1994:57:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":454,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2015:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$519_$","typeString":"type(library Errors)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2022:16:1","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":513,"src":"2015:23:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":458,"nodeType":"RevertStatement","src":"2008:32:1"}]}}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"645:560:1","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":462,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1219:6:1","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"amount","nameLocation":"1234:6:1","nodeType":"VariableDeclaration","scope":462,"src":"1226:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"salt","nameLocation":"1250:4:1","nodeType":"VariableDeclaration","scope":462,"src":"1242:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1242:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"bytecode","nameLocation":"1269:8:1","nodeType":"VariableDeclaration","scope":462,"src":"1256:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":412,"name":"bytes","nodeType":"ElementaryTypeName","src":"1256:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1225:53:1"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"addr","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":462,"src":"1297:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1296:14:1"},"scope":497,"src":"1210:847:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":481,"nodeType":"Block","src":"2353:73:1","statements":[{"expression":{"arguments":[{"id":473,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2385:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":474,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"2391:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":477,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2413:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$497","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$497","typeString":"library Create2"}],"id":476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"2405:7:1","typeDescriptions":{}}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[482,496],"referencedDeclaration":496,"src":"2370:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":471,"id":480,"nodeType":"Return","src":"2363:56:1"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2063:193:1","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":482,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2270:14:1","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"salt","nameLocation":"2293:4:1","nodeType":"VariableDeclaration","scope":482,"src":"2285:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2285:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2307:12:1","nodeType":"VariableDeclaration","scope":482,"src":"2299:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2284:36:1"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"2344:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2343:9:1"},"scope":497,"src":"2261:165:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2784:1679:1","statements":[{"AST":{"nodeType":"YulBlock","src":"2819:1638:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2833:22:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2850:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2844:5:1"},"nodeType":"YulFunctionCall","src":"2844:11:1"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2837:3:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4057:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"4062:4:1","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4053:3:1"},"nodeType":"YulFunctionCall","src":"4053:14:1"},{"name":"bytecodeHash","nodeType":"YulIdentifier","src":"4069:12:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4046:6:1"},"nodeType":"YulFunctionCall","src":"4046:36:1"},"nodeType":"YulExpressionStatement","src":"4046:36:1"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4106:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"4111:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4102:3:1"},"nodeType":"YulFunctionCall","src":"4102:14:1"},{"name":"salt","nodeType":"YulIdentifier","src":"4118:4:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4095:6:1"},"nodeType":"YulFunctionCall","src":"4095:28:1"},"nodeType":"YulExpressionStatement","src":"4095:28:1"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4143:3:1"},{"name":"deployer","nodeType":"YulIdentifier","src":"4148:8:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4136:6:1"},"nodeType":"YulFunctionCall","src":"4136:21:1"},"nodeType":"YulExpressionStatement","src":"4136:21:1"},{"nodeType":"YulVariableDeclaration","src":"4219:27:1","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4236:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"4241:4:1","type":"","value":"0x0b"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4232:3:1"},"nodeType":"YulFunctionCall","src":"4232:14:1"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"4223:5:1","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4345:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"4352:4:1","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4337:7:1"},"nodeType":"YulFunctionCall","src":"4337:20:1"},"nodeType":"YulExpressionStatement","src":"4337:20:1"},{"nodeType":"YulAssignment","src":"4370:77:1","value":{"arguments":[{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4392:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"4399:2:1","type":"","value":"85"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4382:9:1"},"nodeType":"YulFunctionCall","src":"4382:20:1"},{"kind":"number","nodeType":"YulLiteral","src":"4404:42:1","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4378:3:1"},"nodeType":"YulFunctionCall","src":"4378:69:1"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"4370:4:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":492,"isOffset":false,"isSlot":false,"src":"4370:4:1","valueSize":1},{"declaration":487,"isOffset":false,"isSlot":false,"src":"4069:12:1","valueSize":1},{"declaration":489,"isOffset":false,"isSlot":false,"src":"4148:8:1","valueSize":1},{"declaration":485,"isOffset":false,"isSlot":false,"src":"4118:4:1","valueSize":1}],"flags":["memory-safe"],"id":494,"nodeType":"InlineAssembly","src":"2794:1663:1"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"2432:232:1","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":496,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2678:14:1","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"salt","nameLocation":"2701:4:1","nodeType":"VariableDeclaration","scope":496,"src":"2693:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2693:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2715:12:1","nodeType":"VariableDeclaration","scope":496,"src":"2707:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2707:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"deployer","nameLocation":"2737:8:1","nodeType":"VariableDeclaration","scope":496,"src":"2729:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"2729:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2692:54:1"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"addr","nameLocation":"2778:4:1","nodeType":"VariableDeclaration","scope":496,"src":"2770:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2769:14:1"},"scope":497,"src":"2669:1794:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":498,"src":"533:3932:1","usedErrors":[406],"usedEvents":[]}],"src":"101:4365:1"},"id":1},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[519]},"id":520,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":499,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"126:284:2","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":519,"linearizedBaseContracts":[519],"name":"Errors","nameLocation":"419:6:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"432:94:2","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":507,"name":"InsufficientBalance","nameLocation":"537:19:2","nodeType":"ErrorDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"balance","nameLocation":"565:7:2","nodeType":"VariableDeclaration","scope":507,"src":"557:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"needed","nameLocation":"582:6:2","nodeType":"VariableDeclaration","scope":507,"src":"574:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:2"},"src":"531:59:2"},{"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"596:89:2","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":510,"name":"FailedCall","nameLocation":"696:10:2","nodeType":"ErrorDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"706:2:2"},"src":"690:19:2"},{"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"715:46:2","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":513,"name":"FailedDeployment","nameLocation":"772:16:2","nodeType":"ErrorDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[],"src":"788:2:2"},"src":"766:25:2"},{"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"797:58:2","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":518,"name":"MissingPrecompile","nameLocation":"866:17:2","nodeType":"ErrorDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":518,"src":"884:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:2"},"src":"860:33:2"}],"scope":520,"src":"411:484:2","usedErrors":[507,510,513,518],"usedEvents":[]}],"src":"100:796:2"},"id":2},"contracts/minimal-proxy/MinimalProxyFactory.sol":{"ast":{"absolutePath":"contracts/minimal-proxy/MinimalProxyFactory.sol","exportedSymbols":{"Clones":[398],"Create2":[497],"Errors":[519],"MinimalProxyFactory":[548]},"id":549,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":521,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":522,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":549,"sourceUnit":399,"src":"58:50:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MinimalProxyFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":548,"linearizedBaseContracts":[548],"name":"MinimalProxyFactory","nameLocation":"121:19:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":525,"libraryName":{"id":523,"name":"Clones","nameLocations":["154:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":398,"src":"154:6:3"},"nodeType":"UsingForDirective","src":"148:25:3","typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"165:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"anonymous":false,"eventSelector":"e542a942474a745be15595bbad9536fc3040d687435b060b2b9f07c1b7449818","id":529,"name":"ProxyDeployed","nameLocation":"185:13:3","nodeType":"EventDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"indexed":false,"mutability":"mutable","name":"proxy","nameLocation":"207:5:3","nodeType":"VariableDeclaration","scope":529,"src":"199:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"199:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"198:15:3"},"src":"179:35:3"},{"body":{"id":546,"nodeType":"Block","src":"375:221:3","statements":[{"expression":{"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":536,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"483:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":537,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"491:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"506:5:3","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":22,"src":"491:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$attached_to$_t_address_$","typeString":"function (address) returns (address)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"491:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"483:30:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":541,"nodeType":"ExpressionStatement","src":"483:30:3"},{"eventCall":{"arguments":[{"id":543,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"582:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":542,"name":"ProxyDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"568:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"568:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":545,"nodeType":"EmitStatement","src":"563:25:3"}]},"functionSelector":"57894c1b","id":547,"implemented":true,"kind":"function","modifiers":[],"name":"createClone","nameLocation":"306:11:3","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"implementation","nameLocation":"326:14:3","nodeType":"VariableDeclaration","scope":547,"src":"318:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"318:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"317:24:3"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"clone","nameLocation":"368:5:3","nodeType":"VariableDeclaration","scope":547,"src":"360:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"360:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"359:15:3"},"scope":548,"src":"297:299:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":549,"src":"112:487:3","usedErrors":[507,513],"usedEvents":[529]}],"src":"33:566:3"},"id":3}},"contracts":{"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[{"inputs":[],"name":"CloneArgumentsTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fb765a4da3f4148db4eb77100809076403f8c378759644c8e7930799db221d664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xB7 PUSH6 0xA4DA3F4148DB 0x4E 0xB7 PUSH18 0x809076403F8C378759644C8E7930799DB2 0x21 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"817:11026:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fb765a4da3f4148db4eb77100809076403f8c378759644c8e7930799db221d664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xB7 PUSH6 0xA4DA3F4148DB 0x4E 0xB7 PUSH18 0x809076403F8C378759644C8E7930799DB2 0x21 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"817:11026:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x83b10b9c4f3117f1bff30c49bc486d719de88c8425fe646bc8a5f998ee44ceb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2774d5513d7567c3e886a875d90261e1173876324e88e5f21ce79cad14e188\",\"dweb:/ipfs/QmRDkvYwjyHCyTahZ5BqaRz64VtxSzGiYTLmDkacC5yEqr\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b733db6b578bce5645cc4de2a64cae298375117cc663deb00d8847d17a3041c564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 CALLER 0xDB PUSH12 0x578BCE5645CC4DE2A64CAE29 DUP4 PUSH22 0x117CC663DEB00D8847D17A3041C564736F6C63430008 EQ STOP CALLER ","sourceMap":"533:3932:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b733db6b578bce5645cc4de2a64cae298375117cc663deb00d8847d17a3041c564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 CALLER 0xDB PUSH12 0x578BCE5645CC4DE2A64CAE29 DUP4 PUSH22 0x117CC663DEB00D8847D17A3041C564736F6C63430008 EQ STOP CALLER ","sourceMap":"533:3932:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c21a610320bdb81a15d880442d7ab580488ad70e36c06bd53bf2fb1a64c53df64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x21A610320BDB81A15D880442D7 0xAB PC DIV DUP9 0xAD PUSH17 0xE36C06BD53BF2FB1A64C53DF64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206c21a610320bdb81a15d880442d7ab580488ad70e36c06bd53bf2fb1a64c53df64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x21A610320BDB81A15D880442D7 0xAB PC DIV DUP9 0xAD PUSH17 0xE36C06BD53BF2FB1A64C53DF64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"contracts/minimal-proxy/MinimalProxyFactory.sol":{"MinimalProxyFactory":{"abi":[{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"proxy","type":"address"}],"name":"ProxyDeployed","type":"event"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"createClone","outputs":[{"internalType":"address","name":"clone","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506102fd806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806357894c1b14610030575b600080fd5b61004a6004803603810190610045919061022e565b610060565b604051610057919061026a565b60405180910390f35b60006100818273ffffffffffffffffffffffffffffffffffffffff166100bf565b90507fe542a942474a745be15595bbad9536fc3040d687435b060b2b9f07c1b7449818816040516100b2919061026a565b60405180910390a1919050565b60006100cc8260006100d3565b9050919050565b60008147101561011c5747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161011392919061029e565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c5576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101fb826101d0565b9050919050565b61020b816101f0565b811461021657600080fd5b50565b60008135905061022881610202565b92915050565b600060208284031215610244576102436101cb565b5b600061025284828501610219565b91505092915050565b610264816101f0565b82525050565b600060208201905061027f600083018461025b565b92915050565b6000819050919050565b61029881610285565b82525050565b60006040820190506102b3600083018561028f565b6102c0602083018461028f565b939250505056fea2646970667358221220ede90a4e5f90a23253fd94690acb0fd325bf2c27742d6c8c8d33c42d4e72234a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x57894C1B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x81 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF JUMP JUMPDEST SWAP1 POP PUSH32 0xE542A942474A745BE15595BBAD9536FC3040D687435B060B2B9F07C1B7449818 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC DUP3 PUSH1 0x0 PUSH2 0xD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x11C JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113 SWAP3 SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP3 PUSH2 0x1D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP3 DUP6 ADD PUSH2 0x219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x1F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x2C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xE9 EXP 0x4E PUSH0 SWAP1 LOG2 ORIGIN MSTORE8 REVERT SWAP5 PUSH10 0xACB0FD325BF2C27742D PUSH13 0x8C8D33C42D4E72234A64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"112:487:3:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@clone_22":{"entryPoint":191,"id":22,"parameterSlots":1,"returnSlots":1},"@clone_67":{"entryPoint":211,"id":67,"parameterSlots":2,"returnSlots":1},"@createClone_547":{"entryPoint":96,"id":547,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":537,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":603,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":670,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":496,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":464,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":645,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":459,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":514,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2070:4","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:4","statements":[{"nodeType":"YulAssignment","src":"57:19:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:4"},"nodeType":"YulFunctionCall","src":"67:9:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:4"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:4","type":""}],"src":"7:75:4"},{"body":{"nodeType":"YulBlock","src":"177:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:4"},"nodeType":"YulFunctionCall","src":"187:12:4"},"nodeType":"YulExpressionStatement","src":"187:12:4"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:4"},{"body":{"nodeType":"YulBlock","src":"300:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:4"},"nodeType":"YulFunctionCall","src":"310:12:4"},"nodeType":"YulExpressionStatement","src":"310:12:4"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:4"},{"body":{"nodeType":"YulBlock","src":"379:81:4","statements":[{"nodeType":"YulAssignment","src":"389:65:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:4"},"nodeType":"YulFunctionCall","src":"400:54:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:4"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:4","type":""}],"src":"334:126:4"},{"body":{"nodeType":"YulBlock","src":"511:51:4","statements":[{"nodeType":"YulAssignment","src":"521:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:4"},"nodeType":"YulFunctionCall","src":"532:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:4"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:4","type":""}],"src":"466:96:4"},{"body":{"nodeType":"YulBlock","src":"611:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:4"},"nodeType":"YulFunctionCall","src":"670:12:4"},"nodeType":"YulExpressionStatement","src":"670:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:4"},"nodeType":"YulFunctionCall","src":"641:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:4"},"nodeType":"YulFunctionCall","src":"631:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:4"},"nodeType":"YulFunctionCall","src":"624:43:4"},"nodeType":"YulIf","src":"621:63:4"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:4","type":""}],"src":"568:122:4"},{"body":{"nodeType":"YulBlock","src":"748:87:4","statements":[{"nodeType":"YulAssignment","src":"758:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:4"},"nodeType":"YulFunctionCall","src":"767:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:4"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:4"},"nodeType":"YulFunctionCall","src":"796:33:4"},"nodeType":"YulExpressionStatement","src":"796:33:4"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:4","type":""}],"src":"696:139:4"},{"body":{"nodeType":"YulBlock","src":"907:263:4","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:4"},"nodeType":"YulFunctionCall","src":"955:79:4"},"nodeType":"YulExpressionStatement","src":"955:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:4"},"nodeType":"YulFunctionCall","src":"924:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:4"},"nodeType":"YulFunctionCall","src":"920:32:4"},"nodeType":"YulIf","src":"917:119:4"},{"nodeType":"YulBlock","src":"1046:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:4"},"nodeType":"YulFunctionCall","src":"1121:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:4"},"nodeType":"YulFunctionCall","src":"1100:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:4"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:4","type":""}],"src":"841:329:4"},{"body":{"nodeType":"YulBlock","src":"1241:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1258:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1281:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1263:17:4"},"nodeType":"YulFunctionCall","src":"1263:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1251:6:4"},"nodeType":"YulFunctionCall","src":"1251:37:4"},"nodeType":"YulExpressionStatement","src":"1251:37:4"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1229:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1236:3:4","type":""}],"src":"1176:118:4"},{"body":{"nodeType":"YulBlock","src":"1398:124:4","statements":[{"nodeType":"YulAssignment","src":"1408:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1431:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:4"},"nodeType":"YulFunctionCall","src":"1416:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1408:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1488:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1501:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1512:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1497:3:4"},"nodeType":"YulFunctionCall","src":"1497:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1444:43:4"},"nodeType":"YulFunctionCall","src":"1444:71:4"},"nodeType":"YulExpressionStatement","src":"1444:71:4"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1370:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1382:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1393:4:4","type":""}],"src":"1300:222:4"},{"body":{"nodeType":"YulBlock","src":"1573:32:4","statements":[{"nodeType":"YulAssignment","src":"1583:16:4","value":{"name":"value","nodeType":"YulIdentifier","src":"1594:5:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1583:7:4"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1555:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1565:7:4","type":""}],"src":"1528:77:4"},{"body":{"nodeType":"YulBlock","src":"1676:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1693:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1716:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1698:17:4"},"nodeType":"YulFunctionCall","src":"1698:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1686:6:4"},"nodeType":"YulFunctionCall","src":"1686:37:4"},"nodeType":"YulExpressionStatement","src":"1686:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1664:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1671:3:4","type":""}],"src":"1611:118:4"},{"body":{"nodeType":"YulBlock","src":"1861:206:4","statements":[{"nodeType":"YulAssignment","src":"1871:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1883:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1894:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1879:3:4"},"nodeType":"YulFunctionCall","src":"1879:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1871:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1951:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1964:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"1975:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:4"},"nodeType":"YulFunctionCall","src":"1960:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1907:43:4"},"nodeType":"YulFunctionCall","src":"1907:71:4"},"nodeType":"YulExpressionStatement","src":"1907:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2032:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2045:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2056:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2041:3:4"},"nodeType":"YulFunctionCall","src":"2041:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1988:43:4"},"nodeType":"YulFunctionCall","src":"1988:72:4"},"nodeType":"YulExpressionStatement","src":"1988:72:4"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1825:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1837:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1845:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1856:4:4","type":""}],"src":"1735:332:4"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c806357894c1b14610030575b600080fd5b61004a6004803603810190610045919061022e565b610060565b604051610057919061026a565b60405180910390f35b60006100818273ffffffffffffffffffffffffffffffffffffffff166100bf565b90507fe542a942474a745be15595bbad9536fc3040d687435b060b2b9f07c1b7449818816040516100b2919061026a565b60405180910390a1919050565b60006100cc8260006100d3565b9050919050565b60008147101561011c5747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161011392919061029e565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c5576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101fb826101d0565b9050919050565b61020b816101f0565b811461021657600080fd5b50565b60008135905061022881610202565b92915050565b600060208284031215610244576102436101cb565b5b600061025284828501610219565b91505092915050565b610264816101f0565b82525050565b600060208201905061027f600083018461025b565b92915050565b6000819050919050565b61029881610285565b82525050565b60006040820190506102b3600083018561028f565b6102c0602083018461028f565b939250505056fea2646970667358221220ede90a4e5f90a23253fd94690acb0fd325bf2c27742d6c8c8d33c42d4e72234a64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x57894C1B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x81 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF JUMP JUMPDEST SWAP1 POP PUSH32 0xE542A942474A745BE15595BBAD9536FC3040D687435B060B2B9F07C1B7449818 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC DUP3 PUSH1 0x0 PUSH2 0xD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x11C JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113 SWAP3 SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP3 PUSH2 0x1D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP3 DUP6 ADD PUSH2 0x219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x1F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x2C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xE9 EXP 0x4E PUSH0 SWAP1 LOG2 ORIGIN MSTORE8 REVERT SWAP5 PUSH10 0xACB0FD325BF2C27742D PUSH13 0x8C8D33C42D4E72234A64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"112:487:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:299;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;360:13;491:22;:14;:20;;;:22::i;:::-;483:30;;568:20;582:5;568:20;;;;;;:::i;:::-;;;;;;;;297:299;;;:::o;1071:123:0:-;1128:16;1163:24;1169:14;1185:1;1163:5;:24::i;:::-;1156:31;;1071:123;;;:::o;1586:910::-;1658:16;1714:5;1690:21;:29;1686:123;;;1769:21;1792:5;1742:56;;;;;;;;;;;;:::i;:::-;;;;;;;;1686:123;2095:48;2077:14;2071:4;2067:25;2061:4;2057:36;2054:90;2048:4;2041:104;2302:32;2285:14;2279:4;2275:25;2272:63;2266:4;2259:77;2381:4;2375;2368:5;2361:25;2349:37;;2429:1;2409:22;;:8;:22;;;2405:85;;2454:25;;;;;;;;;;;;;;2405:85;1586:910;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:77::-;1565:7;1594:5;1583:16;;1528:77;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:332::-;1856:4;1894:2;1883:9;1879:18;1871:26;;1907:71;1975:1;1964:9;1960:17;1951:6;1907:71;:::i;:::-;1988:72;2056:2;2045:9;2041:18;2032:6;1988:72;:::i;:::-;1735:332;;;;;:::o"},"methodIdentifiers":{"createClone(address)":"57894c1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"ProxyDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"createClone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clone\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/minimal-proxy/MinimalProxyFactory.sol\":\"MinimalProxyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x83b10b9c4f3117f1bff30c49bc486d719de88c8425fe646bc8a5f998ee44ceb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2774d5513d7567c3e886a875d90261e1173876324e88e5f21ce79cad14e188\",\"dweb:/ipfs/QmRDkvYwjyHCyTahZ5BqaRz64VtxSzGiYTLmDkacC5yEqr\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"contracts/minimal-proxy/MinimalProxyFactory.sol\":{\"keccak256\":\"0x5ed0331ee70169289b9956e8a6b71ccbc1f62f9a68fcc38e3b2acd7c334874bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://261d2fde0da7e3d96ea2a41023a52fd6af37cfcf76f390ac357670a2d55b2e8e\",\"dweb:/ipfs/QmfUYg5RDi5jLYiDGdi3guRN6NCJJUZbxdwiroe35uiFGJ\"]}},\"version\":1}"}}}}}