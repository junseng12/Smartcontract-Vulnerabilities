// ✅ scripts/attack-secure.js
const hre = require("hardhat");

async function main() {
  const [deployer, attacker] = await hre.ethers.getSigners();

  console.log("🚀 Deployer address:", deployer.address);
  console.log("🎯 Attacker address:", attacker.address);

  const Secure = await hre.ethers.getContractFactory("Secure");
  const secure = await Secure.deploy();
  await secure.waitForDeployment();
  const secureAddress = await secure.getAddress();
  console.log("✅ Secure contract deployed at:", secureAddress);

  await deployer.sendTransaction({
    to: secureAddress,
    value: hre.ethers.parseEther("5"),
  });
  console.log("💰 Secure funded with 5 ETH");

  const Attack = await hre.ethers.getContractFactory("AttackReentrancy");
  const attack = await Attack.connect(attacker).deploy(secureAddress);
  await attack.waitForDeployment();
  const attackAddress = await attack.getAddress();
  console.log("⚔️  Attack contract deployed at:", attackAddress);

  try {
    const tx = await attack.connect(attacker).attack({
      value: hre.ethers.parseEther("2"),
    });
    await tx.wait();
    console.log("🔥 Attack executed");
  } catch (error) {
    console.error("❌ Attack failed:", error.message);
  }

  const attackerBalance = await hre.ethers.provider.getBalance(attackAddress);
  const secureBalance = await hre.ethers.provider.getBalance(secureAddress);

  console.log(
    "📊 Attacker contract balance:",
    hre.ethers.formatEther(attackerBalance),
    "ETH"
  );
  console.log(
    "🏦 Secure contract balance:",
    hre.ethers.formatEther(secureBalance),
    "ETH"
  );
}

main().catch((error) => {
  console.error("💥 Fatal Error:", error);
  process.exitCode = 1;
});
